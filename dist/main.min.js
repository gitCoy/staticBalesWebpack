(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (factory());
}(this, (function () { 'use strict';

  let path_func = [];

  function dispatcher(path, callback) {
    path_func = path_func || [];
    if (callback) return path_func.push([path, callback]);
    for(var i = 0, l = path_func.length; i < l; ++i) {
      var func = path_func[i];
      var match = path.match(func[0]);
      match && func[1](match);
    }
  }

  /**
   * @param event
   * @return null
   */

  //ToDo: if change sp width to 782
  // SP width
  let isSP = document.body.clientWidth <= 813;

  //isHorizontalScreen
  let isHSFn = () => { return $(window).width() > $(window).height() && isSP };

  const slidebarFixed = (function(bodyCls) {
    var scrollTop;
    return {
      afterOpen: function() {
        scrollTop = document.scrollingElement.scrollTop;
        document.body.classList.add(bodyCls);
        document.body.style.top = -scrollTop + 'px';
      },
      beforeClose: function() {
        document.body.classList.remove(bodyCls);
        // scrollTop lost after set position:fixed, restore it back.
        document.scrollingElement.scrollTop = scrollTop;
      }
    };
  })('no-scroll');

  const onScroll = () => {
    $(window).scroll(function () {
      if ($(this).scrollTop() > 0) {
        $('.x-header').addClass('is-scrolled');
      } else {
        $('.x-header').removeClass('is-scrolled');
      }

    });
  };

  const menuFn = () => {
    $('.x-menu').click(function (e) {
      e.stopPropagation();
      if(!$('body').hasClass('no-scroll')) {
        slidebarFixed.afterOpen();
      } else {
        slidebarFixed.beforeClose();
      }
      $(this).toggleClass('menu-close');
      $('.x-header').toggleClass('header-slide');
      // $('body').toggleClass('no-scroll')
    });
  };

  const orientationSliderFn = () => {
    const changeClass = (param) => {
      if(!param) {
        $('.nav-slider-wrap').addClass('nav-slider-Sh');
      } else {
        $('.nav-slider-wrap').removeClass('nav-slider-Sh');
      }
    };

    changeClass(!isHSFn());

    window.addEventListener('orientationchange', () => {
      changeClass(isHSFn());
    });
  };

  const bind = () => {
    onScroll();
    if(isSP) {
      menuFn();
    }

    orientationSliderFn();
  };

  var header = {
    bind
  };

  const SpTelLinkFn = () => {
    if(isSP) {
      $('.x-tel-link').each((index, item) => {
        $(item).attr('href', $(item).data('href'));
      });
    }
  };

  const bind$1 = () => {
    SpTelLinkFn();
  };

  var globalFn = {
    bind: bind$1
  };

  const scroll = () => {
      const width =window.innerWidth;
      var $scroll = $('.scroll'),$scrollLeft = $('.scroll-left'),$scrollRight = $('.scroll-right'),
            $scrollDelay=$('.scroll-delay'),window_scroll_top;
      var bind = function () {
          $(window).scroll(function () {
              animation();
          });
          // document.addEventListener('touchmove', animation)
          // document.addEventListener('scroll', animation)
      };
     
      var animation = function () {
          window_scroll_top = $(window).scrollTop();
          
          // $scrollLeft.each(function () {
          //     if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+200) {
          //         $(this).addClass('is_scoped');
          //     }
          // });
          // $scrollRight.each(function () {
          //     if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+200) {
          //         $(this).addClass('is_scoped');
          //     }
          // });
          // $scroll.each(function () {
          //     if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +200){
          //         $(this).addClass('is_scoped');
          //     }
          // });
          if(width<=800){
              $scrollDelay.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +100){
                      $(this).addClass('is_scoped');
                  }
              });

              $scrollLeft.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+100) {
                      $(this).addClass('is_scoped');
                  }
              });
              $scrollRight.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+100) {
                      $(this).addClass('is_scoped');
                  }
              });
              $scroll.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +50){
                      $(this).addClass('is_scoped');
                  }
              });
          }else
          {
              $scrollLeft.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+200) {
                      $(this).addClass('is_scoped');
                  }
              });
              $scrollRight.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top)+200) {
                      $(this).addClass('is_scoped');
                  }
              });
              $scroll.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +200){
                      $(this).addClass('is_scoped');
                  }
              });
          }
          
      };
      bind();
      animation();
    };
    

    const addOrRemoveBG =() =>{
        const width = window.innerWidth;
      const height =window.innerHeight;
      if(width<813)
      {
          $(window).scroll(function () {
              const height = (window.innerHeight)*4;
              const window_scroll_top = $(window).scrollTop();
              if(window_scroll_top>height)
              {
                  $('.banner-wrap').addClass('banner-wrap-none');
              }else
              {
                   $('.banner-wrap').removeClass('banner-wrap-none');
              } 
          });
      }
      
    };

    const init = () => {
      scroll();
      addOrRemoveBG();
      // scrollfy();
      //addDelay();
    };
    const bind$2 = () => {

    };
    
    var animation = {
      bind: bind$2,
      init
    };

  const initBanner = () => {
    $(document).ready(function(){
      $('.x-banner-slick').slick({
        infinite: true,
        pauseOnFocus: false,
        lazyLoad: 'ondemand',
        speed: 2000,
        fade: true,
        cssEase: 'linear',
        autoplay: true,
        arrows: false
      });
    });
  };

  const init$1 = () => {
    initBanner();
  };
  const bind$3 = () => {

  };
  var index = {
    init: init$1(),
    bind: bind$3()
  };

  const init$2 = () => {
    };
    const bind$4 = () => {

    };
    var product1 = {
      init: init$2(),
      bind: bind$4()
    };

  const bottomHover$1 = ()=>{
     $('.product-show1').mouseover(function(){
         $('.product-imglist-img').eq(0).find('.product-hover').addClass('product-hover-black');
     });
     $('.product-show2').mouseover(function(){
         $('.product-imglist-img').eq(1).find('.product-hover').addClass('product-hover-black');
     });
     $('.product-show1').mouseout(function(){
          $('.product-imglist-img').eq(0).find('.product-hover').removeClass('product-hover-black');
      });
      $('.product-show2').mouseout(function(){
          $('.product-imglist-img').eq(1).find('.product-hover').removeClass('product-hover-black');
      });
  };

  const _animation = () => {
      var $scroll = $('.heatset-banner'),
            window_scroll_top;
      var bind = function () {
          $(window).scroll(function () {
              animation();
          });
      };

      var animation = function () {
          window_scroll_top = $(window).scrollTop();
          if(isSP)
          {
              $scroll.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +100){
                      $('.heatset-product').addClass('is_scoped');
                  }
              });
          }
          else
          {
              $scroll.each(function () {
                  if (window_scroll_top + window.innerHeight >= ($(this).offset().top) +400){
                      $('.heatset-product').addClass('is_scoped');
                  }
              });
          }
         
      };
      bind();
      animation();
  };

  const phoneFont = () =>{
      const width = window.innerWidth;
      const height = window.innerHeight;
      if(width>height)
      {
          $('.phone-banner-desc').find('p').addClass('phone-banner-font');
      }
  };

    const init$3 = () => {
       bottomHover$1();
       _animation();
       phoneFont();
    };
    const bind$5 = () => {

    };
    var product2 = {
      init: init$3(),
      bind: bind$5()
    };

  const initMap = () => {
    if(window.google) {
      var myCenter=new google.maps.LatLng(35.6853303, 139.7412925);
      var mapProp = {
        center:myCenter,
        zoom:18,
        mapTypeId:google.maps.MapTypeId.ROADMAP
      };
      var map=new google.maps.Map(document.getElementById("googleMap"), mapProp);
      var marker = new google.maps.Marker({
        position: myCenter,
        title:'〒102-0083 東京都千代田区 麹町2-14 第1茜ビル6'
      });
      marker.setMap(map);
    }
  };

  const init$4 = () => {
    initMap();
  };
  const bind$6 = () => {

  };
  var company = {
    init: init$4(),
    bind: bind$6()
  };

  let Route = {
      "all": '.',
      "index":'^index/index.html$',
      "product1":'^product1/product1.html$',
      "product2":'^product2/product2.html$',
      "company":'^company/company.html$',
  };
  $(function () {
    dispatcher(Route.all, () => {
      //loading common js
      animation.init();
      header.bind();
      globalFn.bind();
    });
    dispatcher(Route.index, () => {
      index.init();
      index.bind();
    });

    dispatcher(Route.product1, () => {
      product1.init();
      product1.bind();
    });

    dispatcher(Route.product2, () => {
      product2.init();
      product2.bind();
    });

    dispatcher(Route.company, () => {
      company.init();
      company.bind();
    });
    dispatcher(location.pathname);
  });

})));
